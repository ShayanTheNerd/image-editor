---
import SpinButton from '@components/SpinButton.astro';

import { spinModes } from '@ts/constants.ts';
---

<fieldset>
	<legend>Rotate & Flip</legend>

	<div id="spins_container">
		{spinModes.map((spinMode) => <SpinButton {spinMode} />)}
	</div>
</fieldset>

<style>
	@import '@styles/tokens/media-queries.css';

	fieldset {
		width: 100%;
		display: flex;
		flex-direction: column;
		gap: var(--1_5);
		margin-inline: auto;
	}

	legend {
		margin-bottom: var(--1);

		@media (--lg) {
			font-size: var(--font-lgx);
		}
	}

	div {
		display: flex;
		align-items: center;
		justify-content: space-evenly;
		gap: var(--2);
	}
</style>

<script>
	import type { SpinMode } from '@types';

	import { imgStore } from '@ts/imgStore.ts';
	import { spinImg } from '@ts/modules/spinImg.ts';
	import { DOMElements } from '@ts/domElements.ts';

	DOMElements.spinsContainer.addEventListener('click', ({ target, currentTarget }) => {
		if (target === currentTarget) return;

		const targetElement = target as HTMLElement;
		const spinBtn = targetElement.closest('button') as HTMLButtonElement;
		const spinMode = spinBtn.title.trim() as SpinMode;
		imgStore.updateSpinValue(spinMode);

		spinImg();
	});
</script>
