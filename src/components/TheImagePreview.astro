---
const placeholderImgPath = `${import.meta.env.BASE_URL}/img-placeholder.webp`;
---

<figure id="img_drop_zone">
	<img src={placeholderImgPath} alt="Placeholder" height="408" title="" id="img" />
</figure>

<style>
	@import '@styles/tokens/media-queries.css';

	figure {
		order: 1;
		display: flex;
		align-items: center;
		justify-content: center;
		height: var(--52);
		min-height: 100%;
		overflow: hidden;
		border-radius: var(--1);
		border: 2px solid var(--color-gray-400);
		box-shadow:
			0 0 #0000,
			0 0 #0000,
			inset 0 2px 4px 0 #9ca3af;

		@media (--md) {
			order: 2;
			grid-column: span 8 / span 8;
		}
	}

	img {
		/* prettier-ignore */
		transition: all 300ms var(--ease-smooth), filter 0ms;
		object-fit: cover;
		height: 100%;
		max-width: 100%;
	}
</style>

<script>
	import autoAnimate from '@formkit/auto-animate';
	import { DOMElements } from '@ts/domElements.ts';
	import { renderImg } from '@ts/modules/renderImg.ts';

	const dragDropEvents = ['dragover', 'drop'] as const;
	const { imgDropZone, imgSelectInput } = DOMElements;

	autoAnimate(imgDropZone, { disrespectUserMotionPreference: true });
	imgDropZone.addEventListener('click', () => imgSelectInput.click());
	dragDropEvents.forEach((event) => imgDropZone.addEventListener(event, catchAndRenderImg));

	function catchAndRenderImg(event: DragEvent) {
		event.preventDefault();

		const file = event.dataTransfer?.files?.[0];
		if (file) renderImg(file);
	}
</script>
