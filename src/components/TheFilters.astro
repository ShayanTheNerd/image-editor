---
import imgStore from '@ts/imgStore.ts';
import FilterButton from '@components/FilterButton.astro';
---

<fieldset>
	<legend>Filters</legend>

	<div tabindex="-1" id="filters_container" class="custom-scrollbar">
		{imgStore.state.filters.map((filter, index: number) => <FilterButton name={filter.name} {index} />)}
	</div>
</fieldset>

<style>
	@import '@styles/tokens/media-queries.css';

	fieldset {
		min-width: 100%;
	}

	legend {
		margin-bottom: var(--1);

		@media (--lg) {
			line-height: 1.75rem;
			font-size: var(--font-xl);
		}
	}

	div {
		width: 100%;
		display: flex;
		gap: var(--2_5);
		outline: none;
		overflow-x: auto;
		border-radius: var(--1);
		scroll-behavior: smooth;

		@media (--md) {
			display: grid;
			grid-template-columns: repeat(4, max-content);
		}
		@media (--lg) {
			padding-bottom: var(--2_5);
		}
	}
</style>

<script>
	import imgStore from '@ts/imgStore.ts';
	import applyFilter from '@ts/modules/applyFilter.mts';
	import { DOMElements, ACTIVE_FILTER_CLASS } from '@ts/app.ts';

	DOMElements.filtersContainer.addEventListener('click', activateSelectedFilter);

	function activateSelectedFilter(event: Event) {
		if (event.target === event.currentTarget) return;

		const target = event.target as HTMLButtonElement;
		imgStore.activeFilterIndex = target.textContent.toLowerCase().trim();
		DOMElements.activeFilterBtn.classList.remove(ACTIVE_FILTER_CLASS);
		DOMElements.activeFilterBtn = target;
		DOMElements.activeFilterBtn.classList.add(ACTIVE_FILTER_CLASS);
		DOMElements.activeFilterBtn.scrollIntoView({ inline: 'center', behavior: 'smooth' });
		applyFilter({ newFilter: true });
	}
</script>
